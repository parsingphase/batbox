"""
Django settings for batbox project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
# flake8: noqa

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#########################################################
# Change these for your own installation:
#########################################################

MAPS = {
    'mapbox_token': 'YOUR.TOKEN.HERE'  # Get a token from https://account.mapbox.com/access-tokens/
    # For details of how it's used, see https://leafletjs.com/examples/quick-start/
}

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'SOME.LONG.COMPLEX.STRING.GOES.HERE'  # Set a long random string (~50 characters)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]']  # Add any live hostnames here

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
# This is a safe default for small installations

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

#########################################################
# Options below this point won't usually need changing
#########################################################


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', '0') == '1'
# use DJANGO_DEBUG=1 python manage.py runserver to run locally in dev

# Application definition

INSTALLED_APPS = [
    'tracemap',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_js_reverse',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'batbox.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'batbox.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR + '/webroot/media/'  # Where we put the data files

STATIC_ROOT = BASE_DIR + '/webroot/static/'  # Where static assets are collected to

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'assets'), ]  # In addition to those in individual apps

JS_REVERSE_OUTPUT_PATH = os.path.join(BASE_DIR, 'assets', 'django_js_reverse', 'js')
# Send django_js_reverse to our working directory before makefile collects it with all the rest
# This means it gets served under the debug server in the same way as the other static files
